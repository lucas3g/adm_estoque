// Mocks generated by Mockito 5.4.4 from annotations
// in adm_estoque/test/app/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:adm_estoque/app/core/data/clients/http/client_http.dart'
    as _i16;
import 'package:adm_estoque/app/core/data/clients/local_storage/local_storage.dart'
    as _i18;
import 'package:adm_estoque/app/core/data/clients/local_storage/params/shared_params.dart'
    as _i19;
import 'package:adm_estoque/app/core/domain/entities/either_of.dart' as _i12;
import 'package:adm_estoque/app/core/domain/entities/failure.dart' as _i23;
import 'package:adm_estoque/app/core/domain/entities/response_entity.dart'
    as _i7;
import 'package:adm_estoque/app/core/domain/entities/usecase.dart' as _i26;
import 'package:adm_estoque/app/core/domain/vos/int_vo.dart' as _i10;
import 'package:adm_estoque/app/core/domain/vos/text_vo.dart' as _i9;
import 'package:adm_estoque/app/modules/auth/data/datasources/auth_datasource.dart'
    as _i21;
import 'package:adm_estoque/app/modules/auth/domain/repositories/auth_repository.dart'
    as _i22;
import 'package:adm_estoque/app/modules/auth/domain/usecases/login_with_cnpj_and_name_and_password.dart'
    as _i24;
import 'package:adm_estoque/app/modules/auth/domain/usecases/logout.dart'
    as _i25;
import 'package:adm_estoque/app/modules/auth/domain/usecases/verify_license.dart'
    as _i27;
import 'package:adm_estoque/app/modules/device/data/datasources/device_info_datasource.dart'
    as _i28;
import 'package:adm_estoque/app/modules/device/domain/entities/app_device.dart'
    as _i29;
import 'package:adm_estoque/app/modules/device/domain/repositories/device_info_repository.dart'
    as _i30;
import 'package:adm_estoque/app/modules/device/domain/usecases/get_device_info_usecase.dart'
    as _i31;
import 'package:adm_estoque/app/modules/user/data/datasources/local/user_local_datasource.dart'
    as _i20;
import 'package:adm_estoque/app/modules/user/domain/entities/user_entity.dart'
    as _i11;
import 'package:adm_estoque/app/modules/user/domain/entities/vos/cnpj_vo.dart'
    as _i8;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i15;
import 'package:dio/src/dio.dart' as _i13;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponseEntity_5<T1> extends _i1.SmartFake
    implements _i7.HttpResponseEntity<T1> {
  _FakeHttpResponseEntity_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCnpjVO_6 extends _i1.SmartFake implements _i8.CnpjVO {
  _FakeCnpjVO_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextVO_7 extends _i1.SmartFake implements _i9.TextVO {
  _FakeTextVO_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIntVO_8 extends _i1.SmartFake implements _i10.IntVO {
  _FakeIntVO_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserEntity_9 extends _i1.SmartFake implements _i11.UserEntity {
  _FakeUserEntity_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEitherOf_10<Failure, Success> extends _i1.SmartFake
    implements _i12.EitherOf<Failure, Success> {
  _FakeEitherOf_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i13.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i15.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i15.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<dynamic>>);

  @override
  _i14.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i15.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<dynamic>>);

  @override
  _i14.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i15.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i15.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);

  @override
  _i14.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i14.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i14.Future<_i6.Response<T>>);
}

/// A class which mocks [ClientHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientHttp extends _i1.Mock implements _i16.ClientHttp {
  MockClientHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i7.HttpResponseEntity<T>> patch<T>(
    String? path, {
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {#data: data},
        ),
        returnValue: _i14.Future<_i7.HttpResponseEntity<T>>.value(
            _FakeHttpResponseEntity_5<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {#data: data},
          ),
        )),
      ) as _i14.Future<_i7.HttpResponseEntity<T>>);

  @override
  _i14.Future<_i7.HttpResponseEntity<T>> post<T>(
    String? path, {
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {#data: data},
        ),
        returnValue: _i14.Future<_i7.HttpResponseEntity<T>>.value(
            _FakeHttpResponseEntity_5<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {#data: data},
          ),
        )),
      ) as _i14.Future<_i7.HttpResponseEntity<T>>);

  @override
  _i14.Future<_i7.HttpResponseEntity<T>> get<T>(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
        ),
        returnValue: _i14.Future<_i7.HttpResponseEntity<T>>.value(
            _FakeHttpResponseEntity_5<T>(
          this,
          Invocation.method(
            #get,
            [path],
          ),
        )),
      ) as _i14.Future<_i7.HttpResponseEntity<T>>);

  @override
  _i14.Future<_i7.HttpResponseEntity<T>> delete<T>(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
        ),
        returnValue: _i14.Future<_i7.HttpResponseEntity<T>>.value(
            _FakeHttpResponseEntity_5<T>(
          this,
          Invocation.method(
            #delete,
            [path],
          ),
        )),
      ) as _i14.Future<_i7.HttpResponseEntity<T>>);

  @override
  void setBaseUrl(String? url) => super.noSuchMethod(
        Invocation.method(
          #setBaseUrl,
          [url],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setHeaders(Map<String, dynamic>? header) => super.noSuchMethod(
        Invocation.method(
          #setHeaders,
          [header],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i17.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i14.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i1.Mock implements _i18.LocalStorage {
  MockLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<bool> setData<T>({required _i19.SharedParams<T>? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setData,
          [],
          {#params: params},
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<T?> getData<T>(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [key],
        ),
        returnValue: _i14.Future<T?>.value(),
      ) as _i14.Future<T?>);

  @override
  _i14.Future<bool> removeData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeData,
          [key],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i20.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i11.UserEntity?> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i14.Future<_i11.UserEntity?>.value(),
      ) as _i14.Future<_i11.UserEntity?>);

  @override
  _i14.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> cacheUser(_i11.UserEntity? user) => (super.noSuchMethod(
        Invocation.method(
          #cacheUser,
          [user],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [UserEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserEntity extends _i1.Mock implements _i11.UserEntity {
  MockUserEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.CnpjVO get cnpj => (super.noSuchMethod(
        Invocation.getter(#cnpj),
        returnValue: _FakeCnpjVO_6(
          this,
          Invocation.getter(#cnpj),
        ),
      ) as _i8.CnpjVO);

  @override
  _i9.TextVO get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: _FakeTextVO_7(
          this,
          Invocation.getter(#username),
        ),
      ) as _i9.TextVO);

  @override
  _i9.TextVO get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _FakeTextVO_7(
          this,
          Invocation.getter(#password),
        ),
      ) as _i9.TextVO);

  @override
  _i10.IntVO get ccusto => (super.noSuchMethod(
        Invocation.getter(#ccusto),
        returnValue: _FakeIntVO_8(
          this,
          Invocation.getter(#ccusto),
        ),
      ) as _i10.IntVO);

  @override
  void setCnpj(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCnpj,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setUserName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setUserName,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPassword(String? value) => super.noSuchMethod(
        Invocation.method(
          #setPassword,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCCusto(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCCusto,
          [value],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDatasource extends _i1.Mock implements _i21.AuthDatasource {
  MockAuthDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i11.UserEntity> loginWithCnpjAndNameAndPassword(
          {required _i11.UserEntity? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithCnpjAndNameAndPassword,
          [],
          {#user: user},
        ),
        returnValue: _i14.Future<_i11.UserEntity>.value(_FakeUserEntity_9(
          this,
          Invocation.method(
            #loginWithCnpjAndNameAndPassword,
            [],
            {#user: user},
          ),
        )),
      ) as _i14.Future<_i11.UserEntity>);

  @override
  _i14.Future<void> verifyLicense({required String? license}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyLicense,
          [],
          {#license: license},
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<_i11.UserEntity?> autoLogin() => (super.noSuchMethod(
        Invocation.method(
          #autoLogin,
          [],
        ),
        returnValue: _i14.Future<_i11.UserEntity?>.value(),
      ) as _i14.Future<_i11.UserEntity?>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i22.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>>
      loginWithCnpjAndNameAndPassword({required _i11.UserEntity? user}) =>
          (super.noSuchMethod(
            Invocation.method(
              #loginWithCnpjAndNameAndPassword,
              [],
              {#user: user},
            ),
            returnValue: _i14
                .Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i11.UserEntity>(
              this,
              Invocation.method(
                #loginWithCnpjAndNameAndPassword,
                [],
                {#user: user},
              ),
            )),
          ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>>);

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>> verifyLicense(
          {required String? license}) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyLicense,
          [],
          {#license: license},
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i12.VoidSuccess>(
          this,
          Invocation.method(
            #verifyLicense,
            [],
            {#license: license},
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>);

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>> logout() =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i12.VoidSuccess>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>);

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity?>> autoLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #autoLogin,
          [],
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity?>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i11.UserEntity?>(
          this,
          Invocation.method(
            #autoLogin,
            [],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity?>>);
}

/// A class which mocks [LoginWithCnpjAndNameAndPasswordUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginWithCnpjAndNameAndPasswordUsecase extends _i1.Mock
    implements _i24.LoginWithCnpjAndNameAndPasswordUsecase {
  MockLoginWithCnpjAndNameAndPasswordUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>> call(
          _i11.UserEntity? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [user],
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i11.UserEntity>(
          this,
          Invocation.method(
            #call,
            [user],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i11.UserEntity>>);
}

/// A class which mocks [LogoutUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutUsecase extends _i1.Mock implements _i25.LogoutUsecase {
  MockLogoutUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>> call(
          _i26.NoArgs? args) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [args],
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i12.VoidSuccess>(
          this,
          Invocation.method(
            #call,
            [args],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>);
}

/// A class which mocks [VerifyLicenseUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyLicenseUseCase extends _i1.Mock
    implements _i27.VerifyLicenseUseCase {
  MockVerifyLicenseUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>> call(
          _i27.VerifyLicenseUseCaseArgs? args) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [args],
        ),
        returnValue:
            _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i12.VoidSuccess>(
          this,
          Invocation.method(
            #call,
            [args],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i12.VoidSuccess>>);
}

/// A class which mocks [DeviceInfoDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoDataSource extends _i1.Mock
    implements _i28.DeviceInfoDataSource {
  MockDeviceInfoDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>
      getDeviceInfo() => (super.noSuchMethod(
            Invocation.method(
              #getDeviceInfo,
              [],
            ),
            returnValue: _i14.Future<
                    _i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i29.AppDeviceEntity>(
              this,
              Invocation.method(
                #getDeviceInfo,
                [],
              ),
            )),
          ) as _i14
              .Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>);
}

/// A class which mocks [DeviceInfoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoRepository extends _i1.Mock
    implements _i30.DeviceInfoRepository {
  MockDeviceInfoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>
      getDeviceInfo() => (super.noSuchMethod(
            Invocation.method(
              #getDeviceInfo,
              [],
            ),
            returnValue: _i14.Future<
                    _i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>.value(
                _FakeEitherOf_10<_i23.AppFailure, _i29.AppDeviceEntity>(
              this,
              Invocation.method(
                #getDeviceInfo,
                [],
              ),
            )),
          ) as _i14
              .Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>);
}

/// A class which mocks [GetDeviceInfoUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDeviceInfoUseCase extends _i1.Mock
    implements _i31.GetDeviceInfoUseCase {
  MockGetDeviceInfoUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>> call(
          _i26.NoArgs? args) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [args],
        ),
        returnValue: _i14
            .Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>.value(
            _FakeEitherOf_10<_i23.AppFailure, _i29.AppDeviceEntity>(
          this,
          Invocation.method(
            #call,
            [args],
          ),
        )),
      ) as _i14.Future<_i12.EitherOf<_i23.AppFailure, _i29.AppDeviceEntity>>);
}
